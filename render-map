#!/usr/bin/env bash
set -eu

function copy-output {
  if [[ $1 == -* ]]; then
    local name=map
  else
    local name=$1
  fi
  local path=~/Downloads/$name.pdf
  mkdir -p "${path%/*}"
  if sudo ls /var/lib/machines/ocitysmap/root/ocitysmap/citymap.pdf &> /dev/null; then
    sudo mv /var/lib/machines/ocitysmap/root/ocitysmap/citymap.pdf "$path"
    sudo chown "$USER": "$path"
    echo "Output: ~${path#~}"
  fi
}

function main {
  render-map "${@?An argument is required.}"
  copy-output "$1"
}

function render-map {
  sudo systemd-nspawn -q -M ocitysmap --chdir=/root/ocitysmap bash -eu"$-" -c '
  [[ ${1-} != -h && ${1-} != --help ]] || help=1
  [[ ${help-} ]] || /etc/init.d/postgresql start
  if [[ ${1-} && $1 != -* ]]; then
    name=$1
    shift
    id=$(sudo -i -u postgres psql -A -c "SELECT osm_id FROM planet_osm_polygon WHERE name ILIKE '\''$name'\'' LIMIT 1" -d maposmatic | sed -n '2p')
    if [[ $id =~ ^-?[0-9]+$ ]]; then
      set -- -t "$name" --osmid="$id" "$@"
    else
      echo "Not found: $name"
      exit 1
    fi
  fi
  ./render.py -l multi_page --paper-format="Din A5" "$@"
  if [[ ! ${help-} && -f ./links.ps && -f ./toc.ps ]]; then
    gs -o ./map.pdf -sDEVICE=pdfwrite ./citymap.pdf ./links.ps ./toc.ps
    mv ./map.pdf ./citymap.pdf
  fi
  ' -- "$@"
}

main "$@"
