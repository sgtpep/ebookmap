#!/usr/bin/env bash
set -eu

function bootstrap-container {
  install-packages debian-archive-keyring debootstrap
  if ! sudo ls /var/lib/machines/ocitysmap &> /dev/null; then
    if ! sudo debootstrap stretch /var/lib/machines/ocitysmap; then
      sudo rm -fr /var/lib/machines/ocitysmap
      return 1
    fi
  fi
}

function configure-apt {
  sudo tee /var/lib/machines/ocitysmap/etc/apt/apt.conf.d/50disable-cache > /dev/null <<< 'Binary::apt::APT::Keep-Downloaded-Packages "false";'
}

function configure-hosts {
  sudo sed -i 's/\tlocalhost$/\0 ocitysmap/' /var/lib/machines/ocitysmap/etc/hosts
}

function configure-mapnik {
  sudo ls /var/lib/machines/ocitysmap/root/mapnik/inc/datasource-settings.xml.inc &> /dev/null || run-nspawn-bash -c 'cd ./mapnik && python ./generate_xml.py --dbname=maposmatic --host=localhost --password=maposmatic --port=5432 --user=maposmatic'
  sudo sed -i 's/\(&maxscale_zoom\)17/\115/; s/\(<TextSymbolizer \)\(size\)/\1halo-radius="1" \2/' /var/lib/machines/ocitysmap/root/mapnik/inc/layer-addressing.xml.inc
  sudo perl -0p -e 's/(<Filter>\[highway\] = '\''unclassified'\''.+?&minscale_zoom)15(.+?<TextSymbolizer )(size)/${1}16$2allow-overlap="true" $3/s' -i /var/lib/machines/ocitysmap/root/mapnik/osm.xml
}

function configure-ocitysmap {
  sudo cp /var/lib/machines/ocitysmap/root/{ocitysmap/ocitysmap.conf.dist,.ocitysmap.conf}
  sudo sed -i 's/\(^available_stylesheets: \).*/\1stylesheet_osm1/; s/\(^password=\).*/\1maposmatic/; s|\(^path: \).*/mapnik.*|\1/root/mapnik/osm.xml|' /var/lib/machines/ocitysmap/root/.ocitysmap.conf
  sudo sed -i "s/\(\[\)\(('Din A4'\)/\1('Din A5', 148, 210), \2/" /var/lib/machines/ocitysmap/root/ocitysmap/ocitysmap/layoutlib/__init__.py
}

function create-database {
  if ! sudo ls /var/lib/machines/ocitysmap/var/lib/maposmatic-database &> /dev/null; then
    run-nspawn-bash << \EOF
    /etc/init.d/postgresql start
    sudo -u postgres psql -c '\du' | grep -q ' maposmatic ' || sudo -u postgres psql -c "CREATE ROLE maposmatic LOGIN PASSWORD 'maposmatic'"
    sudo -u postgres psql -c '\l' | grep -q ' maposmatic ' || sudo -u postgres createdb -O maposmatic maposmatic
EOF
    sudo touch /var/lib/machines/ocitysmap/var/lib/maposmatic-database
  fi
}

function install-container-packages {
  run-nspawn-bash -l -c 'dpkg -s "$@" &> /dev/null || apt install -y "$@"' -- "$@"
}

function install-packages {
  if command -v dpkg > /dev/null; then
    dpkg -s "$@" &> /dev/null || sudo apt install -y "$@"
  elif command -v pacman > /dev/null; then
    pacman -Q "$@" &> /dev/null || sudo pacman -Sy --needed --noconfirm "$@"
  fi
}

function install-pip-packages {
  install-container-packages python-pip
  local name
  for name; do
    sudo sh -c 'ls /var/lib/machines/ocitysmap/usr/local/lib/python2.7/dist-packages/"$1"-* &> /dev/null' -- "$name" || run-nspawn pip install "$name"
  done
}

function main {
  bootstrap-container
  setup-container
  setup-locale
  setup-postgresql
  setup-mapnik
  setup-ocitysmap
}

function run-nspawn {
  command -v systemd-nspawn &> /dev/null || install-packages systemd-container
  sudo systemd-nspawn -q -M ocitysmap --chdir=/root "$@"
}

function run-nspawn-bash {
  run-nspawn bash -eu"$-" "$@"
}

function setup-container {
  configure-apt
  configure-hosts
  update-apt-cache
}

function setup-locale {
  install-container-packages locales
  sudo sed -i 's/^# \(en_US\.UTF-8 \)/\1/' /var/lib/machines/ocitysmap/etc/locale.gen
  sudo ls /var/lib/machines/ocitysmap/usr/lib/locale/locale-archive &> /dev/null || run-nspawn bash -l locale-gen
  sudo tee /var/lib/machines/ocitysmap/etc/profile.d/locale.sh > /dev/null <<< 'export LANG=en_US.UTF-8'
}

function setup-mapnik {
  install-container-packages python-mapnik subversion unzip
  sudo ls /var/lib/machines/ocitysmap/root/mapnik &> /dev/null || run-nspawn svn co https://svn.openstreetmap.org/applications/rendering/mapnik
  run-nspawn-bash << \EOF
  cd ./mapnik
  [[ -d ./world_boundaries ]] || ./get-coastlines.sh
  rm -f ./*.{bz2,tgz,zip}
EOF
  configure-mapnik
}

function setup-ocitysmap {
  install-container-packages git python-{cairo,gdal,gtk2,psycopg2,qrcode,rsvg,shapely}
  install-pip-packages colour pluginbase
  sudo ls /var/lib/machines/ocitysmap/root/ocitysmap &> /dev/null || run-nspawn git -C /root clone --depth=1 https://github.com/hholzgra/ocitysmap.git
  configure-ocitysmap
}

function setup-postgis {
  if ! sudo ls /var/lib/machines/ocitysmap/var/lib/maposmatic-postgis &> /dev/null; then
    install-container-packages postgis
    run-nspawn-bash << \EOF
    /etc/init.d/postgresql start
    for path in /usr/share/postgresql/*/contrib/postgis-*/{postgis,spatial_ref_sys}.sql; do
      sudo -u postgres psql -d maposmatic -f "$path"
    done
    for name in geometry_columns spatial_ref_sys; do
      sudo -u postgres psql -c "ALTER TABLE $name OWNER TO maposmatic" -d maposmatic
    done
    sudo -u postgres psql -c 'CREATE EXTENSION IF NOT EXISTS hstore' -d maposmatic
EOF
    sudo touch /var/lib/machines/ocitysmap/var/lib/maposmatic-postgis
  fi
}

function setup-postgresql {
  install-container-packages osm2pgsql postgresql postgresql-contrib sudo
  create-database
  setup-postgis
}

function update-apt-cache {
  sudo ls /var/lib/machines/ocitysmap/var/cache/apt/pkgcache.bin &> /dev/null || run-nspawn apt update
}

main "$@"
