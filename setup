#!/usr/bin/env bash
set -eu

function bootstrap-container {
  install-packages debian-archive-keyring debootstrap
  if ! sudo ls /var/lib/machines/ocitysmap &> /dev/null; then
    if ! sudo debootstrap stretch /var/lib/machines/ocitysmap; then
      sudo rm -fr /var/lib/machines/ocitysmap
      return 1
    fi
  fi
}

function create-database {
  if ! sudo ls /var/lib/machines/ocitysmap/var/lib/maposmatic-database &> /dev/null; then
    sudo systemd-nspawn -q -M ocitysmap bash -eu"$-" << \EOF
    /etc/init.d/postgresql start
    sudo -u postgres psql -c '\du' | grep -q ' maposmatic ' || sudo -u postgres psql -c "CREATE ROLE maposmatic LOGIN PASSWORD 'maposmatic'"
    sudo -u postgres psql -c '\l' | grep -q ' maposmatic ' || sudo -u postgres createdb -O maposmatic maposmatic
EOF
    sudo touch /var/lib/machines/ocitysmap/var/lib/maposmatic-database
  fi
}

function install-container-packages {
  sudo systemd-nspawn -q -M ocitysmap bash -l -c 'dpkg -s "$@" &> /dev/null || apt install -y "$@"' -- "$@"
}

function install-packages {
  ! command -v dpkg > /dev/null || dpkg -s "$@" &> /dev/null || sudo apt install -y "$@"
  ! command -v pacman > /dev/null || pacman -Q "$@" &> /dev/null || sudo pacman -Sy --needed --noconfirm "$@"
}

function main {
  bootstrap-container
  setup-container
  setup-postgresql
  setup-mapnik
  setup-ocitysmap
}

function setup-container {
  configure-hosts
  update-apt-cache
}

function setup-mapnik {
  install-container-packages python-mapnik subversion unzip
  sudo systemd-nspawn -q -M ocitysmap bash -eu"$-" << \EOF
  cd ~
  [[ -d ./mapnik ]] || svn co https://svn.openstreetmap.org/applications/rendering/mapnik
  cd ./mapnik
  [[ -d ./world_boundaries ]] || ./get-coastlines.sh
  rm -f ./*.{bz2,tgz,zip}
  [[ -f ./inc/datasource-settings.xml.inc ]] || python ./generate_xml.py --dbname=maposmatic --host=localhost --password=maposmatic --port=5432 --user=maposmatic
EOF
}

function setup-ocitysmap {
  install-container-packages git python-cairo python-gdal python-gtk2 python-psycopg2 python-shapely
  sudo ls /var/lib/machines/ocitysmap/root/ocitysmap &> /dev/null || sudo systemd-nspawn -q -M ocitysmap git -C /root clone --depth=1 https://github.com/hholzgra/ocitysmap.git
  sudo cp /var/lib/machines/ocitysmap/root{/ocitysmap/ocitysmap.conf.dist,.ocitysmap.conf}
}

function setup-postgis {
  if ! sudo ls /var/lib/machines/ocitysmap/var/lib/maposmatic-postgis &> /dev/null; then
    install-container-packages postgis
    sudo systemd-nspawn -q -M ocitysmap bash -eu"$-" << \EOF
    /etc/init.d/postgresql start
    for path in /usr/share/postgresql/*/contrib/postgis-*/{postgis,spatial_ref_sys}.sql; do
      sudo -u postgres psql -d maposmatic -f "$path"
    done
    for name in geometry_columns spatial_ref_sys; do
      sudo -u postgres psql -c "ALTER TABLE $name OWNER TO maposmatic" -d maposmatic
    done
    sudo -u postgres psql -c 'CREATE EXTENSION IF NOT EXISTS hstore' -d maposmatic
EOF
    sudo touch /var/lib/machines/ocitysmap/var/lib/maposmatic-postgis
  fi
}

function setup-postgresql {
  install-container-packages osm2pgsql postgresql postgresql-contrib sudo
  create-database
  setup-postgis
}

function configure-hosts {
  sudo sed -i 's/\tlocalhost$/\0 ocitysmap/' /var/lib/machines/ocitysmap/etc/hosts
}

function update-apt-cache {
  sudo ls /var/lib/machines/ocitysmap/var/cache/apt/pkgcache.bin &> /dev/null || sudo systemd-nspawn -q -M ocitysmap apt update
}

main "$@"
